:javascript
  // On load, called to load the auth2 library and API client library.
  function handleClientLoad(){
    gapi.load('client:auth2', initClient);
  }

  //  Initializes the API client library and sets up sign-in state
  //  listeners.
  function initClient() {
    gapi.client.init({
      apiKey: API_KEY,
      clientId: CLIENT_ID,
      discoveryDocs: DISCOVERY_DOCS,
      scope: SCOPES
    }).then(function () {
      if(gapi.auth2.getAuthInstance().isSignedIn.get()){
        listUpcomingEvents()
      }
      // Listen for sign-in state changes.
      //gapi.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus);

      // Handle the initial sign-in state.
      //updateSigninStatus(gapi.auth2.getAuthInstance().isSignedIn.get());
      //$('#authorize_button').on('click',handleAuthClick);
      //$('#signout_button').on('click',handleSignoutClick);
    });
  }

  // Client ID and API key from the Developer Console
  var CLIENT_ID = "#{ENV['GOOGLE_CLIENT_ID']}";
  var API_KEY = "#{ENV['GOOGLE_API_KEY']}";

  // Array of API discovery doc URLs for APIs used by the quickstart
  var DISCOVERY_DOCS = ["https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest"];

  // Authorization scopes required by the API; multiple scopes can be
  // included, separated by spaces.
  var SCOPES = "https://www.googleapis.com/auth/calendar";

  

  ///**
  //  *  Called when the signed in status changes, to update the UI
  //  *  appropriately. After a sign-in, the API is called.
  //  */
  // function updateSigninStatus(isSignedIn) {
  //   if (isSignedIn) {
  //     $('#authorize_button').css('display','none');
  //     //$('#signout_button').css('display','block');
  //     listUpcomingEvents();
  //   } else {
  //     $('#authorize_button').css('display','block');
  //     //$('#signout_button').css('display','none');
  //   }
  // }

  ///**
  //  *  Sign in the user upon button click.
  //  */
  // function handleAuthClick(event) {
  //   gapi.auth2.getAuthInstance().signIn();
  // }

  // /**
  //  *  Sign out the user upon button click.
  //  */
  // function handleSignoutClick(event) {
  //   gapi.auth2.getAuthInstance().signOut();
  // }

  /**

   * Print the summary and start datetime/date of the next ten events in
   * the authorized user's calendar. If no events are found an
   * appropriate message is printed.
   */
  function listUpcomingEvents() {
    gapi.client.calendar.events.list({
      'calendarId': '0ebaddf129c7ars64fhihg9cv0@group.calendar.google.com',
      'timeMin': (new Date()).toISOString(),
      'showDeleted': false,
      'singleEvents': true,
      'maxResults': 10,
      'orderBy': 'startTime'
    }).then(function(response){
      renderItinerary(response.result.items)
    })
  }

  function renderItinerary(events){
    $.ajax({
      url: '/calendar_events',
      data: {events: JSON.stringify(events)},
      type: 'GET',
      success: function(response){
        $('#itineraryItems').html(response)
      }
    })
  }


  $(document).on('turbolinks:load',function(){
    $('#add_event').click(function(){
      $('#calendar-edit').modal()
    })
  })
  

%script{:async => "", :defer => "defer", :onload => "this.onload=function(){};handleClientLoad();", :onreadystatechange => "if (this.readyState === 'complete') this.onload()", :src => "https://apis.google.com/js/api.js"}
//%button.btn.btn-primary#authorize_button Authorize
//%button.btn.btn-primary#signout_button Sign Out
.bdrs-3.ov-h.bgc-white.bd
  .bgc-deep-purple-500.ta-c.p-30
    %h1.fw-300.mB-5.lh-1.c-white
      01
      %span.fsz-def st
    %h3.c-white Monday
  .pos-r
    %button.mT-nv-50.pos-a.r-10.t-2.btn.cur-p.bdrs-50p.p-0.w-3r.h-3r.btn-warning#add_event{:type => "button"}
      %i.ti-plus
    %ul.m-0.p-0.mT-20
      #itineraryItems
= render partial: 'calendar_events/form'
/ %a{href: 'https://google.com/calendar', target: '_blank'}
/   .btn.btn-primary My Google Calendars